

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load , sel = address, a = da , b = db , c = dc , d = dd , e = de , f = df , g = dg , h = dh);

    Register(in = in ,load = da  , out = mema);
    Register(in = in ,load = db  , out = memb);
    Register(in = in ,load = dc  , out = memc);
    Register(in = in ,load = dd  , out = memd);
    Register(in = in ,load = de  , out = meme);
    Register(in = in ,load = df  , out = memf);
    Register(in = in ,load = dg  , out = memg);
    Register(in = in ,load = dh  , out = memh);

    Mux8Way16(a = mema, b = memb ,c = memc , d = memd , e = meme, f = memf , g = memg , h = memh , sel = address , out = out );
}